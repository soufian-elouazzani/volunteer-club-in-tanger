{"version":3,"file":"component---src-templates-program-page-js-42e8f51b4ae84801763e.js","mappings":"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","sources":["webpack://fairfield-programming/./src/components/markdown.js","webpack://fairfield-programming/./src/components/person.js","webpack://fairfield-programming/./src/templates/programPage.js"],"sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\n\r\nconst styles = {\r\n    \"h1\": \"text-3xl font-extrabold sm:text-5xl\",\r\n    \"h2\": \"text-2xl font-extrabold sm:text-3xl mt-4 mb-4\",\r\n    \"h3\": \"\",\r\n    \"h4\": \"\",\r\n    \"h5\": \"\",\r\n    \"p\": \"text-lg mb-2\"\r\n};\r\n\r\nconst Markdown = ({ data }) => {\r\n\r\n    const lines = data.split('\\n');\r\n\r\n    return lines.map((line) => {\r\n\r\n        if (line.startsWith('# ')) return <h1 className={styles[\"h1\"]}>{line.slice(2)}</h1>\r\n        if (line.startsWith('## ')) return <h2 className={styles[\"h2\"]}>{line.slice(3)}</h2>\r\n        if (line.startsWith('### ')) return <h3 className={styles[\"h3\"]}>{line.slice(4)}</h3>\r\n        if (line.startsWith('#### ')) return <h4 className={styles[\"h4\"]}>{line.slice(5)}</h4>\r\n        if (line.startsWith('##### ')) return <h5 className={styles[\"h5\"]}>{line.slice(5)}</h5>\r\n\r\n        if (line === \"\") return;\r\n\r\n        return <p className={styles[\"p\"]}>{line}</p>;\r\n\r\n    })\r\n}\r\n\r\nexport default Markdown\r\n","import * as React from \"react\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport { Link } from \"gatsby\"\r\n\r\nfunction Person({ first, last, photo, biography, location = \"\", crumbLabel }) {\r\n  let slug = `${first}-${last}`.toLowerCase()\r\n  let description = biography.split(\" \").slice(0, 40).join(\" \")\r\n\r\n  return (<>\r\n    <Link className=\"block w-full h-full\" to={`/team/${slug}`}>\r\n      <div className=\"rounded shadow p-4 h-full\">\r\n        <img src={photo} class=\"rounded-full w-1/2 mb-4\" />\r\n        <h3 className=\"text-lg font-bold\">\r\n          {first} {last}\r\n        </h3>\r\n        <p className=\"text-md\">{description || \"\"}</p>\r\n      </div>\r\n    </Link>\r\n  </>\r\n  )\r\n}\r\nexport default Person\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nimport Person from \"../components/person\"\r\nimport Markdown from \"../components/markdown\"\r\n\r\nconst SectionBanner = ({ context }) => {\r\n\r\n    const { title, description } = context;\r\n\r\n    return <section>\r\n        <div class=\"mx-auto max-w-screen-xl px-4 py-16\">\r\n            {/* <span>Since {new Date(since).toLocaleString('default', { month: 'long' })}, {new Date(since).getFullYear()}</span> */}\r\n            <h1 className=\"font-bold text-4xl mb-4\">{title}</h1>\r\n            <p className=\"text-xl mb-16 max-w-2xl\">{description}</p>\r\n        </div>\r\n    </section>\r\n\r\n}\r\n\r\nconst SectionMarkdown = ({ context, section }) => {\r\n\r\n    let { content } = section;\r\n    \r\n    if (Array.isArray(content)) content = content.join('\\n');\r\n\r\n    return <section>\r\n        <div class=\"mx-auto max-w-screen-xl px-4\">\r\n            <Markdown data={content} />\r\n        </div>\r\n    </section>\r\n\r\n}\r\n\r\nconst SectionCode = ({ context, section }) => {\r\n\r\n    let { title, content } = section;\r\n    \r\n    if (Array.isArray(content)) content = content.join('\\n');\r\n\r\n    return <section>\r\n        <div class=\"mx-auto max-w-screen-xl px-4 py-16\">\r\n            <h2 className=\"font-bold text-4xl mb-4\">{title}</h2>\r\n            <code class=\"block p-4 rounded\" dangerouslySetInnerHTML={{ __html: content.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\n/g, '<br>') }} />\r\n        </div>\r\n    </section>\r\n\r\n}\r\n\r\nconst Program = ({ pageContext }) => {\r\n\r\n    const { program, content } = pageContext;\r\n\r\n  return <Layout>\r\n    {content.map(section => {\r\n\r\n        if (section.type === \"banner\") return <SectionBanner context={pageContext} section={section} />\r\n        if (section.type === \"markdown\") return <SectionMarkdown context={pageContext} section={section} />\r\n        if (section.type === \"code\") return <SectionCode context={pageContext} section={section} />\r\n\r\n    })}\r\n  </Layout> \r\n}\r\n\r\nexport const Head = ({ pageContext }) => <Seo \r\n    title={`${pageContext.title}`} \r\n    description={pageContext.description} \r\n    />\r\n\r\nexport default Program\r\n"],"names":["styles","_ref","data","split","map","line","startsWith","React","className","slice","first","last","photo","biography","location","crumbLabel","slug","toLowerCase","description","join","Link","to","src","class","SectionBanner","context","title","SectionMarkdown","_ref2","section","content","Array","isArray","Markdown","SectionCode","_ref3","dangerouslySetInnerHTML","__html","replace","Head","_ref5","pageContext","Seo","_ref4","program","Layout","type"],"sourceRoot":""}