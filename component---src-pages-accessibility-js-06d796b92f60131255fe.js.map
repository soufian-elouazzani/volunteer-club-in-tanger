{"version":3,"file":"component---src-pages-accessibility-js-06d796b92f60131255fe.js","mappings":"iJASA,MAAMA,EACI,sCADJA,EAEI,gDAFJA,EAGI,GAHJA,EAII,GAJJA,EAKI,GALJA,EAMG,eAsBT,IAnBiBC,IAAe,IAAd,KAAEC,GAAMD,EAItB,OAFcC,EAAKC,MAAM,MAEZC,KAAKC,GAEVA,EAAKC,WAAW,MAAcC,EAAAA,cAAA,MAAIC,UAAWR,GAAeK,EAAKI,MAAM,IACvEJ,EAAKC,WAAW,OAAeC,EAAAA,cAAA,MAAIC,UAAWR,GAAeK,EAAKI,MAAM,IACxEJ,EAAKC,WAAW,QAAgBC,EAAAA,cAAA,MAAIC,UAAWR,GAAeK,EAAKI,MAAM,IACzEJ,EAAKC,WAAW,SAAiBC,EAAAA,cAAA,MAAIC,UAAWR,GAAeK,EAAKI,MAAM,IAC1EJ,EAAKC,WAAW,UAAkBC,EAAAA,cAAA,MAAIC,UAAWR,GAAeK,EAAKI,MAAM,IAElE,KAATJ,EAEGE,EAAAA,cAAA,KAAGC,UAAWR,GAAcK,QAFnC,GAIF,C,6GCAC,MAAMK,EAAOA,IAAMH,EAAAA,cAACI,EAAAA,EAAG,CAACC,MAAM,gBAAgBC,YAAa,CAAE,KAAQ,0CAA2C,cAAiB,0DAExI,UA7BA,SAA0BZ,GAAc,IAAb,SAACa,GAASb,EAEjC,MAAMc,EAAWC,EAAQ,MAEzB,OACIT,EAAAA,cAACU,EAAAA,EAAM,CAACH,SAAUA,EAAUI,WAAW,iBACnCX,EAAAA,cAAA,eACIA,EAAAA,cAAA,OACAY,MAAM,+DAEFZ,EAAAA,cAAA,OAAKY,MAAM,iCACPZ,EAAAA,cAAA,MAAIY,MAAM,uCAAsC,oBAO5DZ,EAAAA,cAAA,eACIA,EAAAA,cAAA,OAAKC,UAAU,8CACXD,EAAAA,cAACa,EAAAA,EAAQ,CAAClB,KAAMa,EAASM,QAAQC,eAKrD,C,8BChCA,+5B","sources":["webpack://fairfield-programming/./src/components/markdown.js","webpack://fairfield-programming/./src/pages/accessibility.js","webpack://fairfield-programming/./data/accessibility.txt"],"sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\n\r\nconst styles = {\r\n    \"h1\": \"text-3xl font-extrabold sm:text-5xl\",\r\n    \"h2\": \"text-2xl font-extrabold sm:text-3xl mt-4 mb-4\",\r\n    \"h3\": \"\",\r\n    \"h4\": \"\",\r\n    \"h5\": \"\",\r\n    \"p\": \"text-lg mb-2\"\r\n};\r\n\r\nconst Markdown = ({ data }) => {\r\n\r\n    const lines = data.split('\\n');\r\n\r\n    return lines.map((line) => {\r\n\r\n        if (line.startsWith('# ')) return <h1 className={styles[\"h1\"]}>{line.slice(2)}</h1>\r\n        if (line.startsWith('## ')) return <h2 className={styles[\"h2\"]}>{line.slice(3)}</h2>\r\n        if (line.startsWith('### ')) return <h3 className={styles[\"h3\"]}>{line.slice(4)}</h3>\r\n        if (line.startsWith('#### ')) return <h4 className={styles[\"h4\"]}>{line.slice(5)}</h4>\r\n        if (line.startsWith('##### ')) return <h5 className={styles[\"h5\"]}>{line.slice(5)}</h5>\r\n\r\n        if (line === \"\") return;\r\n\r\n        return <p className={styles[\"p\"]}>{line}</p>;\r\n\r\n    })\r\n}\r\n\r\nexport default Markdown\r\n","import * as React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nimport Markdown from \"../components/markdown\"\r\n\r\nfunction AccessibilityPage({location}) {\r\n\r\n    const fileData = require('!!raw-loader!../../data/accessibility.txt')\r\n\r\n    return (\r\n        <Layout location={location} crumbLabel=\"Accessibility\">\r\n            <section>\r\n                <div\r\n                class=\"mx-auto max-w-screen-xl px-4 py-48 lg:flex  lg:items-center\"\r\n                >\r\n                    <div class=\"mx-auto max-w-4xl text-center\">\r\n                        <h1 class=\"text-3xl font-extrabold sm:text-5xl\">\r\n                            Accessibility\r\n                        </h1>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <div className=\"max-w-6xl mx-auto pb-16 px-4 flex flex-col\">\r\n                    <Markdown data={fileData.default.toString()} />\r\n                </div>\r\n            </section>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Accessibility\" breadcrumbs={{ \"Home\": \"https://about.fairfieldprogramming.org/\", \"Accessibility\": \"https://about.fairfieldprogramming.org/accessibility\" }} />\r\n\r\nexport default AccessibilityPage\r\n","export default \"The Fairfield Programming Association prides itself on being an organization that supports everyone, regardless of their ability-status. Because of this, we employ several methods to make our tools and resources publicly available. \\r\\n\\r\\n## Semantic HTML and Screen Reader Support\\r\\n\\r\\nWe use Semantic HTML in our layout design to make pages as simple to navigate as possible for individuals using screen readers, audio devices, and assisted viewing systems. Some of our pages may not be perfect and because of this, we do ask that you report any pages that have poor experience on any of these devices so that we can work to improve. \\r\\n\\r\\n## ARIA Support\\r\\n\\r\\nMany of our pages have Aria-support (Aria standing for Accessible Rich Internet Applications). This means that our pages should be easy to use with assistance devices, but if you do not feel this is the case on certain pages, please let us know.\";"],"names":["styles","_ref","data","split","map","line","startsWith","React","className","slice","Head","Seo","title","breadcrumbs","location","fileData","require","Layout","crumbLabel","class","Markdown","default","toString"],"sourceRoot":""}